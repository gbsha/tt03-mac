--- 
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - ttfir.v
  top_module:  "gbsha_top"      # put the name of your top module here, make it unique by prepending your github username

# Keep a track of the submission yaml
yaml_version: 3.0

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Georg Boecherer"
  title:        "ttFIR filter"
  language:     "Verilog"
  description:  "6 tap Finite Impulse Response (FIR) filter with 6 bit input signal, 6 bit filter coefficients, and 8 bit output signal."

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
    ttFIR implements a digital 6 tap [Finite Impulse Response (FIR) filter](https://en.wikipedia.org/wiki/Finite_impulse_response). Inputs, coefficients, and outputs are 6bit, 6bit, and 8bit values, respectively, in [2's complement](https://en.wikipedia.org/wiki/Two%27s_complement) format.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      - reset high: shift registers for coefficient and output are set to zero.
      - reset low: 
        - 6 clock cycles: 6bit coefficients in 2's complement format are loaded into registers.
        - input at each clock cycle: 6bit inputs in 2's complement format are loaded into shift register.
        - output at each clock cycle: coefficients and input values in shift register are multiplied, added and output in 8bit 2's complement format.

# A description of what the inputs do
  inputs:               
    - clock
    - reset
    - bit0 LSB of 2's complement coefficient/input.
    - bit1
    - bit2
    - bit3
    - bit4
    - bit5 MSB.
# A description of what the outputs do
  outputs:
    - bit0 LSB of 2's complement output.
    - bit1
    - bit2
    - bit3
    - bit4
    - bit5
    - bit6
    - bit7 MSB.

# The following fields are optional
  tag:          "DSP, FIR, filter" # comma separated list of tags: test encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      ""      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     1000       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
